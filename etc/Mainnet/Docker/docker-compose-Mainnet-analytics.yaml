version: '2'

services:
  iotex:
    container_name: iotex-core
    image: iotex/iotex-core:$JRPC_version
    restart: on-failure
    depends_on:
      - pocket
    ports:
      - 8080:8080
      - 4689:4689
      - 14014:14014 #native port
      - 15014:15014 #web3 port
      - 16014:16014 #wss socket
    volumes:
      - "$JRPC/data/IoTeX_Mainnet_Data:/var/data"
      - "$JRPC/log/IoTeX_Mainnet_Log:/var/log"
      - "$JRPC/etc/IoTeX_Mainnet_Etc/config.yaml:/etc/iotex/config_override.yaml"
      - "$JRPC/etc/IoTeX_Mainnet_Etc/genesis.yaml:/etc/iotex/genesis.yaml"
    command: iotex-server -config-path=/etc/iotex/config_override.yaml -genesis-path=/etc/iotex/genesis.yaml -plugin=gateway

  redis:
    container_name: redis
    image: "redis:6.2.4-alpine3.14"
    restart: on-failure
    command: redis-server --appendonly yes
    ports:
      - 6379:6379
    volumes:
      - "$JRPC/data/IoTeX_Mainnet_Data/redis_data:/data/"
    
  babel:
    container_name: babel-api
    build: 
        context: ./external/babel-api
        dockerfile: Dockerfile
    depends_on:
      - iotex
      - redis
    ports:
      - 8545:8545
    environment:
      - PORT=8545
      - CHAIN_ID=4689
      - END_POINT=http://iotex:14014
      - REDIS_HOST=redis
    command: npm start

  mysql:
    container_name: mysql
    image: mysql
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: analytics
    ports:
      - 3306:3306
      - 33060:33060
    cap_add:
      - SYS_NICE
    volumes:
      - "$JRPC/data/IoTeX_Mainnet_Data/mysql:/var/lib/mysql"

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 9090:8080

  analytics:
    container_name: analytics
    build: 
        context: ./external/iotex-analytics
        dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - iotex
      - mysql
    ports:
      - 8089:8089
    environment:
      - CONFIG=/etc/iotex/config.yaml
      - CHAIN_ENDPOINT=iotex:14014
      - ELECTION_ENDPOINT=35.185.52.92:8089
      - CONNECTION_STRING=root:example@tcp(mysql:3306)/
      - DB_NAME=analytics
    command: iotex-server

  pocket:
    container_name: pocket
    build: 
        context: ./external/pocket-core
        dockerfile: Dockerfile
    restart: on-failure
    ports:
      - 442:443
      - 81:80
      - 8081:8081
      - 26656:26656
    volumes:
      - "$JRPC/etc/IoTeX_Mainnet_Etc/Pocket-config.yaml:/root/.pocket/config_override.yaml"
    # environment:
    #   - CONFIG=/etc/iotex/config.yaml
    #   - CHAIN_ENDPOINT=iotex:14014
    #   - ELECTION_ENDPOINT=35.185.52.92:8089
    #   - CONNECTION_STRING=root:example@tcp(mysql:3306)/
    #   - DB_NAME=analytics
    command: sh -c "/init.sh && exec pocket version"
